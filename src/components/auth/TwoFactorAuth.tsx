
import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import { ArrowLeft, Loader } from "lucide-react";
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
} from "@/components/ui/input-otp";

interface TwoFactorAuthProps {
  email: string;
  onBack: () => void;
  onComplete: () => void;
}

const TwoFactorAuth = ({ email, onBack, onComplete }: TwoFactorAuthProps) => {
  const [isVerifying, setIsVerifying] = useState(false);
  const [otp, setOtp] = useState("");
  const { toast } = useToast();

  const handleVerify = async () => {
    if (otp.length !== 6) {
      toast({
        variant: "destructive",
        title: "Invalid code",
        description: "Please enter a 6-digit code",
      });
      return;
    }

    setIsVerifying(true);
    
    // Mock verification - would connect to actual 2FA service
    setTimeout(() => {
      setIsVerifying(false);
      onComplete();
      toast({
        title: "Verification successful",
        description: "You've been securely logged in",
      });
    }, 1500);
  };

  const handleResendCode = () => {
    toast({
      title: "New code sent",
      description: "Check your email or authenticator app",
    });
  };

  return (
    <div className="space-y-6">
      <button
        type="button"
        onClick={onBack}
        className="flex items-center text-sm text-muted-foreground hover:text-foreground"
      >
        <ArrowLeft className="mr-1 h-4 w-4" />
        Back to login
      </button>
      
      <div className="text-center mb-2">
        <h2 className="text-xl font-semibold">Two-factor authentication</h2>
        <p className="text-sm text-muted-foreground mt-1 max-w-xs mx-auto">
          Enter the 6-digit code sent to your email or generated by your authenticator app
        </p>
      </div>
      
      <div className="flex justify-center my-8">
        <InputOTP 
          value={otp} 
          onChange={setOtp}
          maxLength={6}
          render={({ slots }) => (
            <InputOTPGroup>
              {slots.map((slot, index) => (
                <InputOTPSlot key={index} {...slot} />
              ))}
            </InputOTPGroup>
          )}
        />
      </div>

      <div className="space-y-3">
        <Button 
          onClick={handleVerify} 
          className="w-full bg-brand-red hover:bg-brand-red/90"
          disabled={otp.length !== 6 || isVerifying}
        >
          {isVerifying ? (
            <>
              <Loader className="mr-2 h-4 w-4 animate-spin" />
              Verifying...
            </>
          ) : (
            "Verify"
          )}
        </Button>
        
        <button
          type="button"
          onClick={handleResendCode}
          className="text-sm text-center w-full text-brand-teal hover:underline"
        >
          Didn't receive a code? Resend
        </button>
      </div>
    </div>
  );
};

export default TwoFactorAuth;
